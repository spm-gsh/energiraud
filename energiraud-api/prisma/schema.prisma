// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id String @id @default(uuid())
  name String
  ntag String @unique

  balance Float @default(0.0)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  roleId String?
  role Role? @relation(fields: [roleId], references: [id])

  enabled Boolean @default(true)

  transactions Transaction[]
  logs MachineLog[]
  cashCollections CashCollection[]
  cashDeposits CashDeposit[]
}

model Role {
  id String @id @default(uuid())
  name String

  accounts Account[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Transaction {
  id String @id @default(uuid())

  accountId String
  account Account @relation(fields: [accountId], references: [id])

  description String

  amount Float

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Machine {
  id String @id @default(uuid())

  name String
  serial_number String @unique

  hourly_price Float

  switch_ip String
  switch_port Int

  location String

  enabled Boolean @default(true)
  status String
  available_at DateTime

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  logs MachineLog[]
}

model MachineLog {
  id String @id @default(uuid())

  machineId String
  machine Machine @relation(fields: [machineId], references: [id])

  accountId String
  account Account @relation(fields: [accountId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model CashDeposit {
  id String @id @default(uuid())

  amount Float

  accountId String
  account Account @relation(fields: [accountId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  location String
}

model CashCollection {
  id String @id @default(uuid())

  amount Float

  accountId String
  account Account @relation(fields: [accountId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  location String
}

model Location {
  id String @id @default(uuid())

  name String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}